/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const WebsitesLazyImport = createFileRoute('/websites')()
const GamingLazyImport = createFileRoute('/gaming')()
const IndexLazyImport = createFileRoute('/')()
const NotesIndexLazyImport = createFileRoute('/notes/')()
const NotesNoteIdLazyImport = createFileRoute('/notes/$noteId')()

// Create/Update Routes

const WebsitesLazyRoute = WebsitesLazyImport.update({
  id: '/websites',
  path: '/websites',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/websites.lazy').then((d) => d.Route))

const GamingLazyRoute = GamingLazyImport.update({
  id: '/gaming',
  path: '/gaming',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/gaming.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const NotesIndexLazyRoute = NotesIndexLazyImport.update({
  id: '/notes/',
  path: '/notes/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notes/index.lazy').then((d) => d.Route))

const NotesNoteIdLazyRoute = NotesNoteIdLazyImport.update({
  id: '/notes/$noteId',
  path: '/notes/$noteId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/notes/$noteId.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/gaming': {
      id: '/gaming'
      path: '/gaming'
      fullPath: '/gaming'
      preLoaderRoute: typeof GamingLazyImport
      parentRoute: typeof rootRoute
    }
    '/websites': {
      id: '/websites'
      path: '/websites'
      fullPath: '/websites'
      preLoaderRoute: typeof WebsitesLazyImport
      parentRoute: typeof rootRoute
    }
    '/notes/$noteId': {
      id: '/notes/$noteId'
      path: '/notes/$noteId'
      fullPath: '/notes/$noteId'
      preLoaderRoute: typeof NotesNoteIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/notes/': {
      id: '/notes/'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof NotesIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/gaming': typeof GamingLazyRoute
  '/websites': typeof WebsitesLazyRoute
  '/notes/$noteId': typeof NotesNoteIdLazyRoute
  '/notes': typeof NotesIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/gaming': typeof GamingLazyRoute
  '/websites': typeof WebsitesLazyRoute
  '/notes/$noteId': typeof NotesNoteIdLazyRoute
  '/notes': typeof NotesIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/gaming': typeof GamingLazyRoute
  '/websites': typeof WebsitesLazyRoute
  '/notes/$noteId': typeof NotesNoteIdLazyRoute
  '/notes/': typeof NotesIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/gaming' | '/websites' | '/notes/$noteId' | '/notes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/gaming' | '/websites' | '/notes/$noteId' | '/notes'
  id: '__root__' | '/' | '/gaming' | '/websites' | '/notes/$noteId' | '/notes/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  GamingLazyRoute: typeof GamingLazyRoute
  WebsitesLazyRoute: typeof WebsitesLazyRoute
  NotesNoteIdLazyRoute: typeof NotesNoteIdLazyRoute
  NotesIndexLazyRoute: typeof NotesIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  GamingLazyRoute: GamingLazyRoute,
  WebsitesLazyRoute: WebsitesLazyRoute,
  NotesNoteIdLazyRoute: NotesNoteIdLazyRoute,
  NotesIndexLazyRoute: NotesIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/gaming",
        "/websites",
        "/notes/$noteId",
        "/notes/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/gaming": {
      "filePath": "gaming.lazy.tsx"
    },
    "/websites": {
      "filePath": "websites.lazy.tsx"
    },
    "/notes/$noteId": {
      "filePath": "notes/$noteId.lazy.tsx"
    },
    "/notes/": {
      "filePath": "notes/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
